name: 'Publish Lambda to AWS'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

permissions:
  id-token: write
  contents: write

jobs:
  test-lambda:
    name: 'Test Lambda'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto
          cache: 'sbt'

      - name: Set up SBT
        uses: sbt/setup-sbt@v1

      - name: Build and Test with Coverage
        run: |
          sbt coverage test
          sbt coverageReport

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  assemble-lambda:
    name: 'Assemble Lambda and Upload as Artifact'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: test-lambda

    env:
      TF_VAR_LAMBDA_BUCKET: "${{ vars.TF_VAR_RECIPIENT }}-${{ vars.TF_VAR_DISCORD_NAME }}-lambda-functions"

    outputs:
      S3_BUCKET: ${{ env.TF_VAR_LAMBDA_BUCKET }}
      ASSEMBLY_FILE: ${{ steps.assemble-lambda-function.outputs.ASSEMBLY_FILE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto
          cache: 'sbt'

      - name: Set up SBT
        uses: sbt/setup-sbt@v1

      - name: Assemble New Lambda Function
        id: assemble-lambda-function
        run: |
          ASSEMBLY_PATH=$(sbt assembly | grep -e "Assembly jar up to date: " -e "Built: " | awk -F' ' '{print $NF}' | awk -F".jar" '{printf "%s.jar", $1}')
          echo "ASSEMBLY_PATH=$ASSEMBLY_PATH" >> $GITHUB_OUTPUT
          echo "ASSEMBLY_FILE=$(basename $ASSEMBLY_PATH)" >> $GITHUB_OUTPUT
          echo ${{ env.TF_VAR_LAMBDA_BUCKET }} > "${{ inputs.environment }}.variables"
          basename $ASSEMBLY_PATH >> "${{ inputs.environment }}.variables"
          echo $ASSEMBLY_PATH >> "${{ inputs.environment }}.variables"

      - name: Upload Variable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.environment }}-variables"
          path: "${{ inputs.environment }}.variables"

      - name: Upload Assembled Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ inputs.environment }}-lambdaFunction"
          path: ${{ steps.assemble-lambda-function.outputs.ASSEMBLY_PATH }}


  publish-lambda-to-aws:
    name: "Publish Lambda to AWS"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: assemble-lambda
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TF_AWS_VAR_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Download Assembled Artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ inputs.environment }}-lambdaFunction"

      - name: uhhhhh
        run: |
          ls -al
          ls -al target
          ls -al target/scala-3.6.2

      - name: Create (if exists) S3 bucket
        run: aws s3 mb "s3://${{ needs.assemble-lambda.outputs.S3_BUCKET }}"

      - name: Copy Program to S3 Bucket
        run: aws s3 cp ${{ needs.assemble-lambda.outputs.ASSEMBLY_FILE }} "s3://${{ needs.assemble-lambda.outputs.S3_BUCKET }}"
