name: 'Deploy Services with Terraform'

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

env:
  TF_VAR_discord_name: ${{ vars.TF_VAR_DISCORD_NAME }}
  TF_VAR_domain_name: ${{ vars.TF_VAR_DOMAIN_NAME }}
  TF_VAR_recipient: ${{ vars.TF_VAR_RECIPIENT }}
  TF_VAR_webhook_address: ${{ vars.TF_VAR_WEBHOOK_ADDRESS }}
  TF_VAR_aws_access_key_id: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.TF_AWS_VAR_SECRET_ACCESS_KEY }}
  TF_VAR_region: ${{ vars.AWS_REGION }}

jobs:
  parse-artifacts:
    name: Parse Variable Parameters
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      S3_BUCKET: ${{ steps.parse-variables.outputs.S3_BUCKET }}
      S3_KEY: ${{ steps.parse-variables.outputs.S3_KEY }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Variable Artifact
        uses: actions/download-artifact@v4
        with:
          name: "${{ inputs.environment }}-variables"

      - name: Parse Variables
        id: parse-variables
        run: |
          echo "S3_BUCKET=$(head -1 ${{ inputs.environment }}.variables)" >> $GITHUB_OUTPUT
          echo "S3_KEY=$(head -2 ${{ inputs.environment }}.variables | tail -1)" >> $GITHUB_OUTPUT

  check-terraform:
    name: 'Check Terraform'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Format
        run: terraform fmt -check

  plan-terraform:
    name: 'Plan Terraform'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [parse-artifacts, check-terraform]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      env:
        TF_VAR_lambda_bucket: ${{ needs.parse-artifacts.outputs.S3_BUCKET }}
        TF_VAR_lambda_key: ${{ needs.parse-artifacts.outputs.S3_KEY }}
      run: terraform plan

  publish-terraform:
    name: 'Publish Terraform'
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [parse-artifacts, plan-terraform]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        env:
          TF_VAR_lambda_bucket: ${{ needs.parse-artifacts.outputs.S3_BUCKET }}
          TF_VAR_lambda_key: ${{ needs.parse-artifacts.outputs.S3_KEY }}
        run: terraform apply -auto-approve
